{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\aviate\\\\src\\\\pages\\\\CurrencyConverter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav2 from '../components/Nav2';\nimport Footer from '../components/Footer';\nimport './CurrencyConverter.css'; // URL to get the info of all the convertable currencies available\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://blockchain.info/ticker';\n\nconst CurrencyConverter = () => {\n  _s();\n\n  const [currency, setCurrency] = useState([{}]);\n  const [btc, setBtc] = useState();\n  const [val, setVal] = useState();\n  const [curr, setCurr] = useState(); //Getting data from the URL \n\n  async function fetchTours() {\n    const data = await fetch(url);\n    const jsonData = await data.json();\n    setCurrency(jsonData);\n  }\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n  const options = []; //Calling an API request to get the converted BTC value\n\n  async function handleClick(event) {\n    const data = await fetch(`https://blockchain.info/tobtc?currency=${curr}&value=${val}`);\n    const jsonData = await data.json();\n    setBtc(jsonData);\n  } //To prevent the default reloading of page when we submit the form\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  }; //To get the value of inputs\n\n\n  function handleValue(event) {\n    const val = event.target.value;\n    setVal(val);\n  }\n\n  function handleCurrency(event) {\n    const val = event.target.value;\n    setCurr(val);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container curr\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Convert any Value in any Currency to BTC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"value\",\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"value\",\n              onChange: handleValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputState\",\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"inputState\",\n              className: \"form-control form-select dropdown-toggle\",\n              onChange: handleCurrency,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                disabled: true,\n                children: \"Choose . . .\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), Object.entries(currency).forEach(item => {\n                options.push(item);\n              }), options.map(opt => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: opt[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary col-md-2\",\n            onClick: handleClick,\n            children: \"Convert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"btc\",\n              children: \"BTC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"btc\",\n              value: btc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CurrencyConverter, \"emC/jP7vphecHfV4ZmIbtW3zJtk=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/asus/Desktop/aviate/src/pages/CurrencyConverter.js"],"names":["React","useState","useEffect","Nav2","Footer","url","CurrencyConverter","currency","setCurrency","btc","setBtc","val","setVal","curr","setCurr","fetchTours","data","fetch","jsonData","json","options","handleClick","event","handleSubmit","preventDefault","handleValue","target","value","handleCurrency","Object","entries","forEach","item","push","map","opt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Nav2 from '../components/Nav2'\r\nimport Footer from '../components/Footer'\r\nimport './CurrencyConverter.css'\r\n\r\n// URL to get the info of all the convertable currencies available\r\nconst url = 'https://blockchain.info/ticker'\r\n\r\nconst CurrencyConverter = () => {\r\n\r\n    const [currency, setCurrency] = useState([{}])\r\n    const [btc, setBtc] = useState()\r\n    const [val, setVal] = useState()\r\n    const [curr, setCurr] = useState()\r\n\r\n    //Getting data from the URL \r\n    async function fetchTours() {\r\n        const data = await fetch(url)\r\n        const jsonData = await data.json()\r\n        setCurrency(jsonData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTours()\r\n    }, [])\r\n\r\n    const options = []\r\n\r\n    //Calling an API request to get the converted BTC value\r\n    async function handleClick(event){\r\n        const data = await fetch(`https://blockchain.info/tobtc?currency=${curr}&value=${val}`)\r\n        const jsonData = await data.json()\r\n        setBtc(jsonData)\r\n    }\r\n    \r\n    //To prevent the default reloading of page when we submit the form\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    //To get the value of inputs\r\n    function handleValue(event){\r\n        const val = event.target.value\r\n        setVal(val)\r\n    }\r\n    function handleCurrency(event){\r\n        const val = event.target.value\r\n        setCurr(val)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav2 />\r\n            <div className='container curr'>\r\n                <h1>Convert any Value in any Currency to BTC</h1>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor=\"value\">Value</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"value\" onChange={handleValue} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor=\"inputState\">Currency</label>\r\n                            <select id=\"inputState\" className=\"form-control form-select dropdown-toggle\" onChange={handleCurrency}>\r\n                                <option selected disabled>Choose . . .</option>\r\n                                {/* Mapping over the fetched data to get all the currencies */}\r\n                                {Object.entries(currency).forEach(item => {\r\n                                    options.push(item)\r\n                                })}\r\n                                {options.map((opt) => {\r\n                                     return <option>{opt[0]}</option>\r\n                                })}\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <button type=\"submit\"  className=\"btn btn-primary col-md-2\" onClick={handleClick}>Convert</button>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-2\">\r\n                            <label htmlFor=\"btc\">BTC</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"btc\" value={btc}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyConverter"]},"metadata":{},"sourceType":"module"}