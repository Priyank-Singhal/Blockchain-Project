{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Project\\\\aviate\\\\src\\\\components\\\\Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Nav.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  const controlNavbar = () => {\n    if (typeof window !== 'undefined') {\n      if (window.scrollY > lastScrollY) {\n        // if scroll down hide the navbar\n        setShow(true);\n      } else {\n        // if scroll up show the navbar\n        setShow(false);\n      } // remember current page location to use in the next move\n\n\n      setLastScrollY(window.scrollY);\n    }\n  };\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('scroll', controlNavbar); // cleanup function\n\n      return () => {\n        window.removeEventListener('scroll', controlNavbar);\n      };\n    }\n  }, [lastScrollY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `active ${show && 'hidden'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Nav, \"hQgDp5p8hQE+XeG3lHuzard6bZ8=\");\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/Users/asus/Desktop/Project/aviate/src/components/Nav.js"],"names":["React","useEffect","useState","Nav","show","setShow","lastScrollY","setLastScrollY","controlNavbar","window","scrollY","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMM,aAAa,GAAG,MAAM;AACxB,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,UAAIA,MAAM,CAACC,OAAP,GAAiBJ,WAArB,EAAkC;AAAE;AAChCD,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAFD,MAEO;AAAE;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAL8B,CAO/B;;;AACAE,MAAAA,cAAc,CAACE,MAAM,CAACC,OAAR,CAAd;AACH;AACJ,GAXD;;AAaAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAOQ,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,aAAlC,EAD+B,CAG/B;;AACA,aAAO,MAAM;AACTC,QAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,aAArC;AACH,OAFD;AAGH;AACJ,GATQ,EASN,CAACF,WAAD,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,UAASF,IAAI,IAAI,QAAS;AAA3C;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CApED;;GAAMD,G;;KAAAA,G;AAsEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Nav.css'\r\n\r\nconst Nav = () => {\r\n    const [show, setShow] = useState(true);\r\n    const [lastScrollY, setLastScrollY] = useState(0);\r\n\r\n    const controlNavbar = () => {\r\n        if (typeof window !== 'undefined') {\r\n            if (window.scrollY > lastScrollY) { // if scroll down hide the navbar\r\n                setShow(true);\r\n            } else { // if scroll up show the navbar\r\n                setShow(false);\r\n            }\r\n\r\n            // remember current page location to use in the next move\r\n            setLastScrollY(window.scrollY);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            window.addEventListener('scroll', controlNavbar);\r\n\r\n            // cleanup function\r\n            return () => {\r\n                window.removeEventListener('scroll', controlNavbar);\r\n            };\r\n        }\r\n    }, [lastScrollY]);\r\n\r\n    return (\r\n        <div className={`active ${show && 'hidden'}`}>\r\n            {/* <nav className={`navbar navbar-expand-lg navbar-light bg-light active ${show && 'hidden'}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Navbar scroll</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                        <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" style={{ bsScrollHeight: 100 }}>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Link</a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarScrollingDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Link\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarScrollingDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\">Link</a>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav"]},"metadata":{},"sourceType":"module"}